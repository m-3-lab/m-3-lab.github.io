{"version":3,"file":"component---src-pages-people-index-js-5b7146a961abaca2904b.js","mappings":"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","sources":["webpack://m-3-lab/./src/components/people/portrait.js","webpack://m-3-lab/./src/components/people/people.js","webpack://m-3-lab/./src/components/people/alumni-table.js","webpack://m-3-lab/./src/components/people/people-container.js","webpack://m-3-lab/./src/pages/people/index.js","webpack://m-3-lab/./src/images/people/placeholder.inline.svg"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nimport Placeholder from '../../images/people/placeholder.inline.svg';\n\nconst Portrait = ({\n  name,\n  image,\n}) => (\n  image\n    ? (\n      <GatsbyImage\n        alt={name}\n        className=\"people__list-image\"\n        image={image.childImageSharp.gatsbyImageData}\n      />\n    )\n    : (\n      <div className=\"people__list-image\">\n        <Placeholder />\n      </div>\n    )\n);\n\nPortrait.defaultProps = {\n  image: null,\n};\n\nPortrait.propTypes = {\n  image: PropTypes.shape({\n    childImageSharp: PropTypes.shape({\n      gatsbyImageData: PropTypes.shape({}),\n    }),\n  }),\n  name: PropTypes.string.isRequired,\n};\n\nexport default Portrait;\n","/* eslint-disable react/no-danger */\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\n\nimport Link from '../link/link';\nimport Portrait from './portrait';\n\nimport './people.css';\n\nconst People = ({\n  markdown,\n}) => (\n  <div className=\"people\">\n    <section>\n      <header>\n        <h1>\n          Our Team\n        </h1>\n        <FontAwesomeIcon icon={faUsers} size=\"2x\" />\n      </header>\n      <ul className=\"people__list\">\n        {\n          markdown.map((person) => (\n            <li key={person.node.frontmatter.name}>\n              <Portrait\n                image={person.node.frontmatter.image}\n                name={person.node.frontmatter.name}\n              />\n              <div>\n                <h2>{person.node.frontmatter.name}</h2>\n                {\n                  person.node.frontmatter.title\n                  && (\n                    <h3>{person.node.frontmatter.title}</h3>\n                  )\n                }\n                {\n                  person.node.frontmatter.email\n                  && (\n                    <Link\n                      className=\"person__list-email\"\n                      to={`mailto:${person.node.frontmatter.email}`}\n                    >\n                      {person.node.frontmatter.email}\n                    </Link>\n                  )\n                }\n                <div dangerouslySetInnerHTML={{ __html: person.node.html }} />\n              </div>\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  </div>\n);\n\nPeople.propTypes = {\n  markdown: PropTypes.arrayOf(\n    PropTypes.shape({\n      node: PropTypes.shape({\n        frontmatter: PropTypes.shape({\n          email: PropTypes.string,\n          image: PropTypes.shape({}),\n          name: PropTypes.string,\n          title: PropTypes.string,\n        }),\n        html: PropTypes.node,\n      }),\n    }),\n  ).isRequired,\n};\n\nexport default People;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\nimport './alumni-table.css';\nimport './people.css';\n\nconst AlumniTable = ({ alumni }) => {\n  // Function to parse URLs and return an array of <a> elements\n  const renderCurrentPositionLinks = (currentPosition) => {\n    if (!currentPosition || currentPosition.length === 0) {\n      return <span>No current position available</span>;\n    }\n  \n    return currentPosition.map((position, index) => {\n      const { description, linkText, linkUrl } = position;\n  \n      return (\n        <React.Fragment key={index}>\n          {description && <span>{description} </span>}\n          {linkUrl && (\n            <a href={linkUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n              {linkText || linkUrl} {/* Display linkText or fallback to the URL */}\n            </a>\n          )}\n          {index < currentPosition.length - 1 && <span>, </span>} {/* Add a comma between entries */}\n        </React.Fragment>\n      );\n    });\n  };\n  \n  return (\n    <div className=\"alumni-header\">\n      <section>\n        <header>\n         <h1>\n          Alumni Directory\n        </h1>\n        <p>A comprehensive list of our distinguished graduates</p>\n        </header>\n      </section>\n\n      <table className=\"alumni-table\">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Graduation Year</th>\n            <th>Publications</th>\n            <th>Current Position</th>\n          </tr>\n        </thead>\n        <tbody>\n          {alumni.length > 0 ? (\n            alumni.map((alumnus, index) => {\n              const { name, graduationYear, publications, currentPosition } = alumnus;\n\n              return (\n                <tr key={index}>\n                  <td>{name}</td>\n                  <td>{graduationYear || 'N/A'}</td>\n                  <td>{publications || 'N/A'} </td>\n                  <td>{renderCurrentPositionLinks(currentPosition)}</td>\n                </tr>\n              );\n            })\n          ) : (\n            <tr>\n              <td colSpan=\"4\">No alumni data available</td>\n            </tr>\n          )}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default AlumniTable;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport People from './people';\nimport AlumniTable from './alumni-table'; // Import the AlumniTable component\nimport sortMarkdown from '../../utils/sort-markdown';\n\nconst PeopleContainer = () => {\n  const query = useStaticQuery(\n    graphql`\n      query {\n        currentPeople: allMarkdownRemark(\n          filter: { fileAbsolutePath: { regex: \"/people/current/\" } }\n        ) {\n          edges {\n            node {\n              html\n              frontmatter {\n                email\n                image {\n                  childImageSharp {\n                    gatsbyImageData(\n                      quality: 70,\n                      placeholder: BLURRED,\n                      height: 300,\n                      width: 300,\n                    )\n                  }\n                }\n                name\n                title\n                order\n              }\n            }\n          }\n        }\n\n        alumni: allMarkdownRemark(\n          filter: { fileAbsolutePath: { regex: \"/people/alumni/\" } }\n        ) {\n          edges {\n            node {\n              frontmatter {\n                name\n                graduationYear\n                publications\n                currentPosition {\n                  description\n                  linkText\n                  linkUrl\n               }\n              }\n            }\n          }\n        }\n      }\n    `\n  );\n\n\n\n  // Sorting current people\n  const currentPeople = sortMarkdown(query.currentPeople.edges, ['order', 'name']);\n  \n  // Extracting alumni data\n  const alumni = query.alumni.edges.map(({ node }) => node.frontmatter);\n\n\n  return (\n    <>\n      {currentPeople.length > 0 && <People markdown={currentPeople} />}\n      \n      {/* Render the alumni table if there is any alumni data */}\n      {alumni.length > 0 && <AlumniTable alumni={alumni} />}\n    </>\n  );\n};\n\nexport default PeopleContainer;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../../components/layout/layout';\nimport SEO from '../../components/seo/seo';\nimport PeopleContainer from '../../components/people/people-container';\nimport AlumniTable from '../../components/people/alumni-table';\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO title=\"Our Team\" />\n    <PeopleContainer data={data} />\n  </Layout>\n);\n\nexport const query = graphql`\n  query {\n    currentPeople: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/people/current/\" } }\n    ) {\n      edges {\n        node {\n          html\n          frontmatter {\n            email\n            image {\n              childImageSharp {\n                gatsbyImageData(\n                  quality: 70,\n                  placeholder: BLURRED,\n                  height: 300,\n                  width: 300,\n                )\n              }\n            }\n            name\n            title\n            order\n          }\n        }\n      }\n    }\n\n    alumni: allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/people/alumni/\" } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            name\n            graduationYear\n            publications\n            currentPosition {\n              description\n              linkText\n              linkUrl\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default IndexPage;\n","var React = require('react');\n\nfunction PlaceholderInline (props) {\n    return React.createElement(\"svg\",props,[React.createElement(\"title\",{\"key\":0},\"Placeholder portrait\"),React.createElement(\"desc\",{\"key\":1},\"image\"),React.createElement(\"path\",{\"d\":\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\",\"key\":2})]);\n}\n\nPlaceholderInline.defaultProps = {\"aria-label\":\"Placeholder portrait image\",\"viewBox\":\"0 0 448 512\"};\n\nmodule.exports = PlaceholderInline;\n\nPlaceholderInline.default = PlaceholderInline;\n"],"names":["Portrait","_ref","name","image","React","GatsbyImage","alt","className","childImageSharp","gatsbyImageData","Placeholder","defaultProps","markdown","FontAwesomeIcon","icon","faUsers","size","map","person","key","node","frontmatter","title","email","Link","to","dangerouslySetInnerHTML","__html","html","alumni","length","alumnus","index","graduationYear","publications","currentPosition","position","description","linkText","linkUrl","href","target","rel","renderCurrentPositionLinks","colSpan","PeopleContainer","query","useStaticQuery","currentPeople","sortMarkdown","edges","People","AlumniTable","data","Layout","SEO","PlaceholderInline","props","createElement","module","exports","default"],"sourceRoot":""}